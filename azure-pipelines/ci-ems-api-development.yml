# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- development

pool:   
  vmImage: 'ubuntu-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: 'restore'
    projects: '**/AMP.EMS.API.csproj'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    projects: '**/AMP.EMS.API.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Unit Tests'
  inputs:
    projects: '**/api/*.csproj'
    command: 'test'

- task: PublishTestResults@2
  condition: succeededOrFailed()
  displayName: 'Publish Unit Tests'
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '**/TEST-*.xml'

- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    azureSubscription: 'amp-mid-azuredevops-development'
    command: 'publish'
    publishWebProjects: true
    projects: '**/src/api/AMP.EMS.API.csproj'
    arguments: '--configuration $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/Output'
    zipAfterPublish: true
    modifyOutputPath: true

- task: AzureRmWebAppDeployment@4
  displayName: 'Deploy'
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'amp-mid-azuredevops-development'
    appType: 'webApp'
    WebAppName: 'amp-ems-api-dev'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
    enableCustomDeployment: true
    DeploymentType: 'webDeploy'